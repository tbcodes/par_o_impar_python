print ("***************************************************************")
print (" Programa creado por TruzzBlogg - Par o Impar - Versión Básica")
print ("***************************************************************")



#Inicializo la variable number para eliminar cualquier valor previo que pudiera tener

number = 0

number=int(input("Introduzca un número!"))   #Solicitamos un dato al usuario


if number%2 == 0:   #Usamos la propiedad numérica Módulo (%2) para saber si el número es par o impar
    print("El numero: %d es par" %number)    #Si el resultado del Módulo de un número es 0, significa que es par
else:
    print("Uyyy, el número: %d no es par! Entonces, es impar!" %number) #Si el resultado del Módulo no es igual a 0, significa que es impar




print ("*****************************************************************")
print (" Programa creado por TruzzBlogg - Par o Impar - Versión Avanzada")
print ("*****************************************************************")



#Inicializo la variable number para eliminar cualquier valor previo que pudiera tener

number = 0

#Ejecuto una validación de datos para verificar que el usuario realmente introduce un número
#Para la validación de datos, usaré un bloque try | except, ejecutado dentro de un bucle while

while True:
  try:
     number=int(input("Introduzca un número!"))  #Solicitamos un dato/número al usuario  
  except ValueError:
     print("Not an integer! Try again!") #Se lanza este mensaje si no se introduce un número. 
     continue
  else:
     if number%2 == 0:                   #Usamos la propiedad numérica Módulo (%2) para saber si el número es par o impar
         print("El numero", number, "es par") #Si el resultado del Módulo de un número es 0, significa que es par
     else:
         print("Uyyy, el número", number, " no es par! Entonces, es impar!")  #Si el resultado del Módulo no es igual a 0, significa que es impar
         continue    #Si quiero que el programa se detenga, tras ejecutarse una vez, cambio el "continue" por un "break"









